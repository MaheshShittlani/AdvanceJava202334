Segment of JAVA
--------------------
1. Java SE (Java Standard Edition)
    - Java fundamental Concepts
    - Java standard API/Library
    - Standalone solution

2. Java EE (Java Enterprise Edition)
    - Web based solution
    - Multiple API to build web application
        - Servlet API
        - JSP API
        - Taglib Library
        - JDBC API
        - Email API
3. Java ME (Java mobile edition) - Not in Use
    - Mobile based solution

-----------------------------------------------------
Note: J2EE provide API to build web based application.


What is the Web application?
-------------------------------
Web application is the collection of multiple web pages hosted on a server and any web page has its unique address(URI) with them it can be accessed.

What is the web page?
----------------------
Web pages are the piece of program that can be run over the browser throught the internet.

Types of web pages...
----------------------
    1. Static web pages
    2. Dynamic web pages

Static web pages...
---------------------
    Static pages are those that can't be changed automatically. It need to be changed manually.

    Generally static web pages are created with html, css.

Dynamic web pages....
------------------------
    It can be automatically changes (updated) by a program running in background.


Web application terminology
-----------------------------
1. Client - client is a person/pc/browser which is sending the request to acces the web page.

2. Server - is a machine or software program which provide the service or serve(host) your resources(files, images, program, data).

3. Web pages can be access by sending the `Request` to the server, server find the web pages, run some process if need and send the `Response`.

4. Request
-----------------
    - URI / URL
    - Request / HTTP Method (Get / Post)
    - Request Header
        - Platform (windows, linux, mobile)
        - user-agent: browser
        - ip-address: 
    - Request data / Request Body / Payload

5. Reponse
----------------
    - Status Code 
        - 200 - Success
        - 404 - Page not found (4XX)
        - 500 - Server side error (5XX)
    - Respons Header
    - Response Body / Response Data/ Payload

How static resources are processed?
--------------------------------------
    Static Reources - The files that don't need to process before sending to the client.
        - html files
        - css files
        - js files
        - images
        - pdf files
        - Audio / Video file

How dynamic pages are processed?
--------------------------------------
    Dynamic Resource - The files that should be processed before sending to the client.
        - Servlet
        - Jsp pages
    
Port
---------
    - Port is the unique idenfication of a server.
        - Web(http) server - 80(Apache)
                     - 8080 (Apache Tomcat)
        - Secure web server - https: 443
        - Mysql Server - 3306

Server
-----------
    - Web server (http server) -> Apache Tomcat
        - Servlet Container
        - JSP Container
    - Database Server (Data storage)




Servlet
------------
    What is the servlet?
    -----------------------
    1. Servlets are Java-based server-side components that dynamically generate web content and handle client requests.
    
    2. They provide a way to create dynamic web applications by extending the functionality of web servers.

    3. Servlets are part of the Java Servlet API, which is a specification that defines how servlets should behave and interact with the web server.

Installation of Tomcat
---------------------------
1. Tomcat home: C:/apache-tomcat
2. Important Jar
	-----------------
		- servlet-api.jar
		- jsp-api.jar
		- el-api.jar

3. Summary of tomcat directories
------------------------------------
1. bin: Contains the executable files and scripts for starting, stopping, and managing Tomcat server instances. It includes files like startup.bat (or startup.sh for Unix-based systems) and shutdown.bat (or shutdown.sh).

2. conf: Contains configuration files for Tomcat. The main file is server.xml, which configures the server-specific settings like ports, connectors, and global resources. Other files include web.xml for default web application settings and various XML files for configuring realms, security, and logging.


3. lib: Contains Java Archive (JAR) files required by Tomcat and its web applications. It includes Tomcat's own libraries and dependencies that provide additional functionality. You can also place third-party libraries in this directory that should be shared across multiple web applications.

4. logs: Contains log files generated by Tomcat, including catalina.out, which contains standard output and error messages. It also includes access logs, which record details about incoming requests and other log files for different components.

5. webapps: This directory is the default location for deploying web applications. Each web application is typically placed in a separate directory under the webapps directory. When Tomcat starts, it automatically deploys the web applications found in this directory.

6. work: Temporary directory used by Tomcat for storing compiled JSPs, cached classes, and other temporary files generated during runtime. It is recommended not to modify or delete files in this directory manually.

7. temp: Another temporary directory used by Tomcat for storing temporary files that are not related to specific web applications. It can include uploaded files, session data, and other temporary data. Like the work directory, it is advisable not to modify or delete files in this directory manually

Tomcat Configuration
-------------------------
0. Set the JRE_HOME or JAVA_HOME environment variable with Java path
1. What is the port?
2. How to change the port -> Tomcat dirctory-> conf -> sever.xml -> change 8080
3. How to create tomcat-users and access the manage-gui
--------------------------------------------------------------

Directory structure(packaging) of J2EE application
----------------------------------------------------
App1
    -WEB-INF (private resources)
        - classes (.class file of all servlets)
        - lib
            - dependencies (.jar file of library)
        -web.xml (deployment descriptor) - Application configration

    -META-INF
        -context.xml (applicaiton configration)

            (public resources)
    - index.html
    - css files
    - js files
    - image files